upstream api {
    server api:8000;
}

upstream flower {
    server flower:5555;
}

server {
    listen 8080;
    
    client_max_body_size 100M;

    root /usr/share/nginx/html;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    gzip_vary on;


    location /flower/ {
        proxy_pass http://flower/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_redirect off;
    }

    location /api/v1/ {
        proxy_pass http://api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /admin {
        proxy_pass http://api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /staticfiles/ {
        alias /usr/share/nginx/html/staticfiles/;
        try_files $uri =404;
        autoindex off;
        expires 1y;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location /mediafiles/ {
        alias /usr/share/nginx/html/mediafiles/;
        try_files $uri =404;
        autoindex off;
        expires 1y;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";

        if ($http_origin = "http://localhost:5173") {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
        }

        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
            return 204;
        }
    }

     # HLS / LL-HLS support
    location /mediafiles/clips/hls/ {
        alias /usr/share/nginx/html/mediafiles/clips/hls/;

        # ðŸ”‘ Very important: allow serving partial .m4s files immediately
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp4 mp4 m4s;
        }

        # Prevent buffering, so partial segments are streamed immediately
        aio on;
        directio 512;
        tcp_nopush on;
        tcp_nodelay on;
        sendfile on;

        # Allow range requests (needed for video seeking and HLS players)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Expose-Headers Content-Length;
        add_header Cache-Control no-cache;
    }

    location /assets/ {
        root /usr/share/nginx/html;
        try_files $uri =404;
        autoindex off;
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";

        # CORS headers for development
        if ($http_origin = "http://localhost:5173") {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
        }

        # Handle CORS preflight requests
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
            return 204;
        }
    }
    
    location /ws/ {
        proxy_pass http://api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        try_files $uri $uri/ /index.html;
        add_header Cross-Origin-Opener-Policy same-origin;
        add_header Cross-Origin-Embedder-Policy require-corp;
    }

    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
        expires 30d;
        add_header Cache-Control "public";
        add_header Cross-Origin-Embedder-Policy "unsafe-none" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;

        # CORS headers for development
        if ($http_origin = "http://localhost:5173") {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
        }

        # Handle CORS preflight requests
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
            return 204;
        }
    }
}